#ifndef ENFORCER_H
#define ENFORCER_H

namespace Progs {

void _Laser_Touch();
void _LaunchLaser(const vector& org, vector vec);
void enforcer_fire();
void enf_stand1();
void enf_stand2();
void enf_stand3();
void enf_stand4();
void enf_stand5();
void enf_stand6();
void enf_stand7();
void enf_walk1();
void enf_walk2();
void enf_walk3();
void enf_walk4();
void enf_walk5();
void enf_walk6();
void enf_walk7();
void enf_walk8();
void enf_walk9();
void enf_walk10();
void enf_walk11();
void enf_walk12();
void enf_walk13();
void enf_walk14();
void enf_walk15();
void enf_walk16();
void enf_run1();
void enf_run2();
void enf_run3();
void enf_run4();
void enf_run5();
void enf_run6();
void enf_run7();
void enf_run8();
void enf_atk1();
void enf_atk2();
void enf_atk3();
void enf_atk4();
void enf_atk5();
void enf_atk6();
void enf_atk7();
void enf_atk8();
void enf_atk9();
void enf_atk10();
void enf_atk11();
void enf_atk12();
void enf_atk13();
void enf_atk14();
void enf_paina1();
void enf_paina2();
void enf_paina3();
void enf_paina4();
void enf_painb1();
void enf_painb2();
void enf_painb3();
void enf_painb4();
void enf_painb5();
void enf_painc1();
void enf_painc2();
void enf_painc3();
void enf_painc4();
void enf_painc5();
void enf_painc6();
void enf_painc7();
void enf_painc8();
void enf_paind1();
void enf_paind2();
void enf_paind3();
void enf_paind4();
void enf_paind5();
void enf_paind6();
void enf_paind7();
void enf_paind8();
void enf_paind9();
void enf_paind10();
void enf_paind11();
void enf_paind12();
void enf_paind13();
void enf_paind14();
void enf_paind15();
void enf_paind16();
void enf_paind17();
void enf_paind18();
void enf_paind19();
void enf_pain(entity attacker, float damage);
void enf_die1();
void enf_die2();
void enf_die3();
void enf_die4();
void enf_die5();
void enf_die6();
void enf_die7();
void enf_die8();
void enf_die9();
void enf_die10();
void enf_die11();
void enf_die12();
void enf_die13();
void enf_die14();
void enf_fdie1();
void enf_fdie2();
void enf_fdie3();
void enf_fdie4();
void enf_fdie5();
void enf_fdie6();
void enf_fdie7();
void enf_fdie8();
void enf_fdie9();
void enf_fdie10();
void enf_fdie11();
void enf_die();
float EnforcerOnSight();
void monster_enforcer();

} // END namespace Progs

#endif // END ENFORCER_H

