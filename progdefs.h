#include <string>
#include <array>

using std::string;
using std::to_string;
//using std::array;

struct ProgsFields;
typedef ProgsFields entvars_t;

// I tried to use a reference rather than pointer here, to avoid using arrows rather than dots for field access,
// but references can't be changed and must be initialized at creation. So, it seems like they can't work with
// the current progs code model.
typedef entvars_t* entity;
typedef std::array<float, 3> vector;     typedef vector V; // for brevity

// exported progs global variables and functions
namespace Progs
{
	// enumerations
	// TODO: I would really prefer to put this in the Invade module.
	enum class InvadeGameState { STOPPED, STARTING_PREMATCH, IN_PREMATCH, GAME_RUNNING };

	// global variables
/*	extern entity world;
	extern entity self;
	extern entity other;
	extern entity trace_ent;
	extern entity msg_entity;
	extern entity newmis;
	extern float  time;
	extern float  frametime;
	extern float  force_retouch;
	extern vector v_forward;
	extern vector v_right;
	extern vector v_up;
	extern vector trace_endpos;
	extern vector trace_plane_normal;
	extern float  trace_allsolid;
	extern float  trace_startsolid;
	extern float  trace_fraction;
	extern float  trace_inwater;
	extern float  trace_inopen;
	extern float  trace_plane_dist;
	extern float  total_secrets;
	extern float  found_secrets;
	extern float  total_monsters;
	extern float  killed_monsters;
	extern float  parm1;
	extern float  parm2;
	extern float  parm3;
	extern float  parm4;
	extern float  parm5;
	extern float  parm6;
	extern float  parm7;
	extern float  parm8;
	extern float  parm9;
	extern float  parm10;
	extern float  parm11;
	extern float  parm12;
	extern float  parm13;
	extern float  parm14;
	extern float  parm15;
	extern float  parm16;
	extern int    serverflags;
	extern string mapname;
	// these came from files outside of defs.cpp
	extern entity activator;
	extern entity damage_attacker;
	//extern entity damage_inflictor;   // PZ: Apparently this vanilla progs global was removed from CuTF progs (or renamed).
	extern entity stemp;
	extern entity otemp;
	extern entity s;
	extern int toggleflags;
	extern entity old;
	extern entity multi_ent;
	extern entity lastspawn;
	extern entity bodyque_head;
	extern vector blood_org;
	extern vector puff_org;
	extern string string_null;
	extern string nextmap;
	extern float  intermission_running;
	extern int disabledstuff1;
	extern int disabledstuff2;
	extern int disabledstuff3;
	extern int disabledstuff4;
	extern int disabledstuff5;
	extern int givenstuff1;
	extern int givenstuff2;
	extern int givenstuff3;
	extern int givenstuff4;
	extern int givenstuff5;
	extern float  intermission_exittime;
	extern float  modelindex_eyes;
	extern float  modelindex_player;
	extern float  deathmatch;
	extern float  empty_float;
	extern float  fraglimit;
	extern float  framecount;
	extern float  movedist;
	extern float  rj;
	extern int    teamplay;
	extern float  timelimit;
	extern float  blood_count;
	extern float  multi_damage;
	extern float  puff_count;

	// CuTF globals
	extern entity debug_target;
	extern entity current_voteent;
	extern entity headActiveSound;
	extern entity fixer;
	extern entity b_waypointCopyList;
	extern entity route_table;
	extern entity player_head;
	extern entity phys_head;
	extern entity way_head;
	extern entity way_tail;
	extern entity b_topicStarter;
	extern entity solidTestEntity;
	extern entity lastspawn_team1;
	extern entity lastspawn_team2;
	extern entity lastspawn_team3;
	extern entity lastspawn_team4;
	extern entity sight_entity;
	//extern entity _time;
	extern entity le1;
	extern entity le2;
	extern entity npc_teamLists;
	extern entity _npc_lastTeamEntity;
	extern entity shub;*/

/////////////////////////////////
	extern entity self;
	extern entity other;
	extern entity world;
	extern float time;
	extern float frametime;
	extern entity newmis;
	extern float force_retouch;
	extern string mapname;
	extern float deathmatch;
	extern float coop;
	extern int teamplay;
	extern int serverflags;
	extern float total_secrets;
	extern float total_monsters;
	extern float found_secrets;
	extern float killed_monsters;
	extern float parm1;
	extern float parm2;
	extern float parm3;
	extern float parm4;
	extern float parm5;
	extern float parm6;
	extern float parm7;
	extern float parm8;
	extern float parm9;
	extern float parm10;
	extern float parm11;
	extern float parm12;
	extern float parm13;
	extern float parm14;
	extern float parm15;
	extern float parm16;
	extern vector v_forward;
	extern vector v_up;
	extern vector v_right;
	extern float trace_allsolid;
	extern float trace_startsolid;
	extern float trace_fraction;
	extern vector trace_endpos;
	extern vector trace_plane_normal;
	extern float trace_plane_dist;
	extern entity trace_ent;
	extern float trace_inopen;
	extern float trace_inwater;
	extern entity msg_entity;
	extern float movedist;
	//extern float gameover;
	extern string string_null;
	extern float empty_float;
	extern vector vector_null;
	extern entity activator;
	extern entity damage_attacker;
	extern float framecount;
	extern float skill;
	//extern int teamplay;
	extern float timelimit;
	extern float fraglimit;
	extern float deathmatch;
	extern int toggleflags;
	extern float respawn_delay_time;
	extern float number_of_teams;
	extern int illegalclasses;
	extern int illegalclasses1;
	extern int illegalclasses2;
	extern int illegalclasses3;
	extern int illegalclasses4;
	extern int civilianteams;
	extern float team1col;
	extern float team2col;
	extern float team3col;
	extern float team4col;
	extern float team1score;
	extern float team2score;
	extern float team3score;
	extern float team4score;
	extern float team1lives;
	extern float team2lives;
	extern float team3lives;
	extern float team4lives;
	extern float pay_msgs;
	extern float team_prefix;
	extern float ceasefire;
	extern float drop_items;
	extern float no_grapple;
	extern float custom_mode;
	extern float stock_mode;
	extern float extras_mode;
	extern float nicecolors;
	extern float relax_cheatcheck;
	extern float army_delay;
	extern float no_detpush;
	extern entity debug_target;
	extern float allow_debug;
	extern float allow_watermonsters;
	extern float spec_menu;
	extern float bodyque_size;
	extern float num_clients;
	extern float num_players;
	extern float num_specs;
	extern float current_brightness;
	extern float daylight;
	extern int storm;
	extern int earthquake;
	extern int daytime;
	extern int runes;
	extern float noon_light;
	extern float midnight_light;
	extern float specialstate;
	extern float intermission_running;
	extern float sniper_factor;
	extern float no_punish;
	extern float no_votemap;
	extern float no_bright;
	extern int disabledstuff1;
	extern int disabledstuff2;
	extern int disabledstuff3;
	extern int disabledstuff4;
	extern int disabledstuff5;
	extern int givenstuff1;
	extern int givenstuff2;
	extern int givenstuff3;
	extern int givenstuff4;
	extern int givenstuff5;
	extern int megatf;
	extern float PZ_DEBUG;
	extern entity current_voteent;
	extern string last_vote_starter;
	extern float votesleeping;
	extern float team1maxplayers;
	extern float team2maxplayers;
	extern float team3maxplayers;
	extern float team4maxplayers;
	extern float team1advantage;
	extern float team2advantage;
	extern float team3advantage;
	extern float team4advantage;
	extern float team1nextspam;
	extern float team2nextspam;
	extern float team3nextspam;
	extern float team4nextspam;
	extern float CTF_Map;
	extern float coop;
	extern float rj;
	extern string team_menu_string;
	extern float item_list_bit;
	extern float agr;
	extern float agr_frags;
	extern float agr_minutes;
	extern float agr_vote_max;
	extern float agr_teamfrags;
	extern float agrTimeToRewardBlue;
	extern float agrTimerRunning;
	extern float agrTimeOfLastSound;
	extern float agrFlagRespawnWait;
	extern float invade;
	extern float invade_frags;
	extern float invade_minutes;
	extern float invade_teamfrags;
	extern float invade_prematchTime;
	extern InvadeGameState invade_gameState;
	extern float invade_teamOnDef;
	extern float invade_swapRoles;
	//extern float invade_prematch;
	//extern int   invade_timerRunning;
	extern float invade_timePrematchEnds;
	extern float invade_timeOfLastSound;
	extern float invade_timeToRewardDef;
	//extern float invade_gameRunning;
	//extern float neo;
	//extern entity neoLives;
	//extern float lastNadeRegen;
	//extern float lastDetRegen;
	//extern float neoDamageFactor;
	//extern float neoResistFactor;
	//extern float neoRegenFactor;
	extern float playersOnTeam1;
	extern float playersOnTeam2;
	extern float playersOnTeam3;
	extern float playersOnTeam4;
	extern float num_world_flames;
	extern float num_world_pipebombs;
	extern float num_team_pipebombs_1;
	extern float num_team_pipebombs_2;
	extern float num_team_pipebombs_3;
	extern float num_team_pipebombs_4;
	extern float num_world_ammoboxes;
	extern float num_team_ammoboxes_1;
	extern float num_team_ammoboxes_2;
	extern float num_team_ammoboxes_3;
	extern float num_team_ammoboxes_4;
	extern float spy_off;
	extern float invis_only;
	extern float allow_hook;
	extern float jello;
	extern float light_damage;
	extern float prematch;
	extern float bounty;
	extern float custom_money;
	extern float team_with_flag;
	extern int friends1_mask;
	extern int friends2_mask;
	extern int friends3_mask;
	extern int friends4_mask;
	extern float normalQuakeMap;
	//extern float live_camera;
	extern float already_chosen_map;
	extern float triggered_cycle;
	extern entity newmis;
	extern float deathmsg;
	extern float server_spawned;
	//extern float precached_sounds;
	//extern float precached_models;
	extern entity headActiveSound;
	extern float modelindex_eyes;
	extern float modelindex_player;
	extern float modelindex_null;
	extern vector b_activeClientSlots;
	extern float max_clients;
	extern float real_frametime;
	extern float averageFrameTime;
	extern float bot_frameCounter;
	extern float bot_count;
	extern int b_options;
	extern float lasttime;
	extern float waypoint_mode;
	extern float dump_mode;
	extern float b_copyMode;
	extern float b_copyAcrossXAxis;
	extern float b_directionToFace[32];
	extern float b_slideDirection;
	extern float b_slideSpeed;
	extern vector b_mapCenter;
	extern vector b_goToCoordinate;
	extern float waypoints;
	extern float direct_route;
	extern float userid;
	extern float sv_friction;
	extern float sv_gravity;
	extern float sv_accelerate;
	extern float sv_maxspeed;
	extern float sv_stopspeed;
	extern entity fixer;
	extern entity b_waypointCopyList;
	extern entity route_table;
	extern entity player_head;
	extern entity phys_head;
	extern entity way_head;
	extern entity way_tail;
	extern float busy_waypoints;
	extern float saved_bots;
	extern float saved_skills1;
	extern float saved_skills2;
	extern float current_bots;
	extern float saved1;
	extern float saved2;
	extern float saved3;
	extern float scratch1;
	extern float scratch2;
	extern float scratch3;
	extern float scratch4;
	extern float bytecounter;
	extern float filecount;
	extern float coop;
	extern float collectiveHumanScore;
	extern float lastCollectiveHumanScore;
	extern float frik_mainRoutine_frameTimeAccumulator;
	extern float lastTimeBotCountAdjusted;
	extern float lastTimeDecrementedBotSkill;
	extern float frik_mainRoutine_LastNumberOfHumans;
	extern float frik_updateWaypointVisualMarkers_lastTimeToggled;
	extern float frik_updateWaypointVisualMarkers_copiesVisible;
	extern float modelindex_eyes;
	extern float stagger_think;
	extern float runOnce;
	extern entity b_topicStarter;
	extern float b_topic;
	extern float file;
	extern float menu_sounds;
	extern float modelindex_eyes;
	extern float modelindex_player;
	extern float modelindex_null;
	extern float modelindex_eyes;
	extern float modelindex_player;
	extern float modelindex_null;
	extern float cool_gibs;
	extern entity solidTestEntity;
	extern float unlockedZeroGrav;
	extern entity multi_ent;
	extern float multi_damage;
	extern vector blood_org;
	extern float blood_count;
	extern vector puff_org;
	extern float puff_count;
	extern entity lastspawn;
	extern float StartFrame_initialized;
	extern entity bodyque_head;
	extern float modelindex_eyes;
	extern float modelindex_player;
	extern float modelindex_null;
	extern string nextmap;
	extern float intermission_exittime;
	extern entity lastspawn_team1;
	extern entity lastspawn_team2;
	extern entity lastspawn_team3;
	extern entity lastspawn_team4;
	extern float already_cycled;
	extern float kickable_heads;
	extern entity stemp;
	extern entity otemp;
	extern entity s;
	extern entity old;
	extern float current_yaw;
	extern float enemy_yaw;
	extern float enemy_vis;
	extern float enemy_infront;
	extern float enemy_range;
	extern entity sight_entity;
	extern float sight_entity_time;
	extern float NumGremlins;
	extern float NumSpawnGremlins;
	extern float modelindex_tesla;
	extern entity le1;
	extern entity le2;
	extern float lightning_end;
	extern float modelindex_tesla;
	// WHY ARE SOME OF THESE VARIABLES IN THIS TWICE???
	/*extern float agr;
	extern float agr_frags;
	extern float agr_minutes;
	extern float agr_vote_max;
	extern float agr_teamfrags;
	extern float agrTimeToRewardBlue;
	extern float agrTimerRunning;
	extern float agrTimeOfLastSound;
	extern float agrFlagRespawnWait;
	extern float invade;
	extern float invade_teamfrags;
	extern float invade_prematchTime;
	extern float invade_teamOnDef;
	extern float invade_swapRoles;
	extern float invade_prematch;
	extern float invade_timePrematchEnds;
	extern float invade_timeOfLastSound;
	extern float invade_gameRunning;*/
	extern float spawner_id;
	extern int monster_mode;
	extern float worldscan_delay;
	extern entity npc_teamLists;
	extern entity _npc_lastTeamEntity;
	extern entity le1;
	extern entity le2;
	extern float lightning_end;
	extern float hknight_type;
	extern entity shub;
	extern entity slideMenuController;

/////////////////////////////////

	// general functions
	void SUB_Null();
	void clearEntityFields(entity e);   // auto-generated into progdefs.cpp
	void initGlobalVariables();         // auto-generated into progdefs.cpp
	void SetChangeParms();
	void ClientConnect();
	void ClientDisconnect();
	void SpectatorConnect();
	void SpectatorDisconnect();
	void PutClientInServer();
	void ClientKill();
	void SetNewParms();
	void StartFrame();
	void PlayerPreThink();
	void PlayerPostThink();
	void SpectatorThink();

	// spawn functions
	void worldspawn();
	void func_button();
	void info_intermission();
	void info_player_coop();
	void info_player_deathmatch();
	void info_player_start();
	void info_player_start2();
	void trigger_changelevel();
	void func_door();
	void func_door_secret();
	void item_armor1();
	void item_armor2();
	void item_armorInv();
	void item_artifact_envirosuit();
	void item_artifact_invisibility();
	void item_artifact_invulnerability();
	void item_artifact_super_damage();
	void item_cells();
	void item_health();
	void item_key1();
	void item_key2();
	void item_rockets();
	void item_shells();
	void item_sigil();
	void item_spikes();
	void item_weapon();
	void weapon_grenadelauncher();
	void weapon_lightning();
	void weapon_nailgun();
	void weapon_rocketlauncher();
	void weapon_supernailgun();
	void weapon_supershotgun();
	void air_bubbles();
	void info_null();
	void info_notnull();
	void light();
	void light_fluoro();
	void light_fluorospark();
	void light_globe();
	void light_torch_small_walltorch();
	void light_flame_large_yellow();
	void light_flame_small_yellow();
	void light_flame_small_white();
	void misc_fireball();
	void misc_explobox();
	void misc_explobox2();
	void trap_spikeshooter();
	void trap_shooter();
	void viewthing();
	void func_wall();
	void func_illusionary();
	void func_episodegate();
	void func_bossgate();
	void ambient_suck_wind();
	void ambient_drone();
	void ambient_flouro_buzz();
	void ambient_drip();
	void ambient_comp_hum();
	void ambient_thunder();
	void ambient_light_buzz();
	void ambient_swamp1();
	void ambient_swamp2();
	void misc_noisemaker();
	void func_plat();
	void func_train();
	void misc_teleporttrain();
	void path_corner();
	void info_teleport_destination();
	void trigger_monsterjump();
	void trigger_multiple();
	void trigger_once();
	void trigger_onlyregistered();
	void trigger_push();
	void trigger_relay();
	void trigger_secret();
	void trigger_setskill();
	void trigger_teleport();
	void trigger_counter();
	void monster_ogre();
	void monster_demon1();
	void monster_shambler();
	void monster_knight();
	void monster_army();
	void monster_wizard();
	void monster_dog();
	void monster_zombie();
	void monster_boss();
	void monster_tarbaby();
	void monster_hell_knight();
	void monster_fish();
	void monster_shalrath();
	void monster_enforcer();
	void monster_oldone();
	void event_lightning();
	void trigger_hurt();

	// CuTF (Team Fortress)
	bool ClientCommand(int num_args, const string& arg1, const string& arg2, const string& arg3, const string& arg4, const string& arg5, const string& arg6, const string& arg7);
    // spawn functions
	void info_tfdetect();
	void info_player_teamspawn();  void i_p_t();
	void info_tfgoal();            void i_t_g();
	void info_tfgoal_timer();      void i_t_t();
	void item_tfgoal();
	// MegaTF spawn functions
	void ambient_sound();
	void effect_random_sound();
	void ambient_jungle();
	void ambient_diesel();
	void ambient_chopper();
	void ambient_eerie();
	void ambient_ocean();
	void ambient_peakwind();
	void ambient_lavapit();
	void ambient_unholy();
	void ambient_flagflap();
	void ambient_high_wind();
	void ambient_meadow();
	void ambient_brook();
	void ambient_ice_moving();
	void ambient_nightpond();
	void ambient_alert();
	void ambient_chant();
	void ambient_onboard();
	void ambient_rocket_engine();
	void ambient_weaponfire();
	void effect_rockfall();
	void effect_airburst();
	void func_bobbingwater();
	void func_glass();
	void effect_lightning();
	void monster_dog();
	void monster_turret();
	void monster_fish();
	void monster_zombie();
} // END namespace Progs

typedef struct edict_s edict_t;

// Progs entity field variables, accessible by all engine functionality
typedef struct ProgsFields
{
	edict_t* _edict; // points to the edict owning these fields (this is required by the engine code)
	vector angles;
	vector v_angle;
	vector view_ofs;
	vector mangle;
	vector finalangle;
	vector movedir;
	vector origin;
	vector oldorigin;
	vector velocity;
	vector avelocity;
	vector finaldest;
	vector dest;
	vector dest1;
	vector dest2;
	vector size;
	vector mins;
	vector maxs;
	vector absmin;
	vector absmax;
	vector pos1;
	vector pos2;
	string model;
	string mdl;
	string map;
	string classname;
	string netname;
	string message;
	string targetname;
	string deathtype;
	string noise;
	string noise1;
	string noise2;
	string noise3;
	string noise4;
	string target;
	string killtarget;
	string weaponmodel;
	string wad;
	int button0;             // PZ TODO: add bool type for ones like this?
	int button1;
	int button2;
	int items;
	int flags;
	int movetype;
	int spawnflags;
	int skin;
	int weapon;
	int effects;
	int deadflag;
	int watertype;
	float walkframe;
	int bubble_count;
	int aflag;
	float impulse;
	float worldtype;
	float axhitme;
	float weaponframe;
	float show_hostile;
	float dmg_take;
	float dmg_save;
	float lip;
	float voided;
	float colormap;
	float frags;
	float swim_flag;
	float air_finished;
	float attack_finished;
	float pain_finished;
	float super_sound;
	float super_time;
	float super_damage_finished;
	float invisible_time;
	float invisible_finished;
	float invincible_time;
	float invincible_finished;
	float rad_time;
	float dmgtime;
	float radsuit_finished;
	float currentammo;
	float armortype;
	float armorvalue;
	float takedamage;
	float modelindex;
	float health;
	float healamount;
	float healtype;
	float ammo_cells;
	float ammo_shells;
	float ammo_rockets;
	float ammo_nails;
	float solid;
	float height;
	float nextthink;
	float t_width;
	float t_length;
	float ltime;
	float delay;
	float pausetime;
	float ideal_yaw;
	float fly_sound;
	float fixangle;
	float timeLastJumped;
	float frame;
	float cnt;
	float teleport_time;
	float count;
	float max_health;
	float invisible_sound;
	float invincible_sound;
	float waterlevel;
	float wait;
	float speed;
	float sounds;
	float dmg;
	float style;
	float state;
	float team;
	float yaw_speed;
	entity aiment;
	float lastruntime;
//	float ishuman;            // Not used in vanilla QuakeWorld, but easier to add here than it is to remove all bot code, essentially.
//	float admin_flag;         // Not used in vanilla QuakeWorld, but easier to just add here than it is to undo all engine code that uses it. (TODO. Don't require progs to have this field.)
//	float current_menu;       // Not used in vanilla QuakeWorld, but easier to just add here than it is to undo all engine code that uses it. (TODO. Don't require progs to have this field.)
	float light_lev;
	entity dmg_inflictor;
	entity owner;
	entity enemy;
	entity movetarget;
	entity goalentity;
	entity trigger_field;
	entity chain;
	entity groundentity;
	void (*think)();
	void (*think1)();
	void (*th_stand)();
	void (*touch)();
	void (*use)();
	void (*th_die)();
	void (*th_walk)();
	void (*th_run)();
	void (*th_missile)();
	void (*th_melee)();
	void (*th_pain)(entity attacker, float damage);
	void (*blocked)();

	// CuTF fields
/*	int b_aiflags;
	int team_no;
	int playerclass;
	int tf_items;
	int cutf_items;
	int weapons_carried;
	int job;
	int undercover_skin;
	float custom_speed;
	entity _next;
	entity target1;
	entity target2;
	entity target3;
	entity target4;  */
	entity oldenemy;
	float lefty;
	float search_time;
	float attack_state;
	float maxspeed;
	float gravity;
	float money;
	float custom_speed;
	float ff_count;
	float penance_time;
	float last_attacked_time;
	entity inspirator;
	float has_cheated;
	float demon_blood;
	entity demon_one;
	entity demon_two;
	entity demon_three;
	void (*th_fireball)();
	float hover_time;
	int done_custom;
	entity scaned;
	float prev_velocity_z;
	float waitmin;
	float waitmax;
	float distance;
	float volume;
	float playerclass;
	float nextpc;
	float last_impulse;
	int armorclass;
	int tf_items;
	int job;
	float job_finished;
	int tf_items_flags;
	float no_grenades_1;
	float no_grenades_2;
	float tp_grenades_1;
	float tp_grenades_2;
	float got_aliases;
	float cheat_check;
	float is_removed;
	float is_undercover;
	float is_building;
	float is_detpacking;
	float is_feigning;
	float is_haxxxoring;
	float is_toffingadet;
	float is_unabletospy;
	int is_malfunctioning;
	float is_abouttodie;
	float is_killed;
	float option;
	float option2;
	float is_connected;
	float has_dispenser;
	int has_sentry;
	int has_tesla;
	int has_camera;
	float has_sensor;
	float has_teleporter;
	float has_fieldgen;
	float admin_flag;
	entity admin_kick;
	entity martyr_enemy;
	float stored_deathmsg;
	float cluster_mode;
	float has_holo;        // this needs to be a float, because it's often used to hold a time value
	vector neworigin;
	vector rotate;
	float endtime;
	int rotate_type;
	string path;
	string group;
	string event;
	float duration;
	float AIRG_Timeout;
	float AIRG_FireCount;
	int AIRG_Flags;
	entity AIRG_FlyTracker;
	float aura;
	float aura_time;
	entity crusader_inspirator;
	float reload_laser_cannon;
	int tfstate;
	entity linked_list;
	entity observer_list;
	float maxammo_shells;
	float maxammo_nails;
	float maxammo_cells;
	float maxammo_rockets;
	int items_allowed;
	float armor_allowed;
	float maxarmor;
	float weaponmode;
	float motd;
	float current_menu;
	float menu_count;
	float menu_displaytime;
	float team_no;
	float new_team_no;
	float lives;
	float infection_team_no;
	entity building;
	float building_wait;
	entity real_owner;
	float real_frags;
	float respawn_time;
	float suicide_time;
	int weapons_carried;
	int current_weapon;
	int cutf_items;
	int cutf_moreitems;
	float ammo_medikit;
	float maxammo_medikit;
	float ammo_detpack;
	float maxammo_detpack;
	float ammo_c4det;
	float reload_shotgun;
	float reload_super_shotgun;
	float reload_grenade_launcher;
	float reload_rocket_launcher;
	float reload_light_assault;
	float heat;
	float immune_to_chec;
	float last_saveme_sound;
	float last_grenade_primed;
	float goal_no;
	float group_no;
	int goal_state;
	float owned_by;
	int goal_activation;
	int goal_effects;
	int goal_result;
	float goal_group;
	float else_goal;
	int if_goal_is_active;
	int if_goal_is_inactive;
	int if_goal_is_removed;
	int if_group_is_active;
	int if_group_is_inactive;
	int if_group_is_removed;
	float activate_goal_no;
	float inactivate_goal_no;
	float remove_goal_no;
	float restore_goal_no;
	float activate_group_no;
	float inactivate_group_no;
	float remove_group_no;
	int restore_group_no;
	float has_item_from_group;
	float remove_item_group;
	float return_item_no;
	float if_item_has_moved;
	float if_item_hasnt_moved;
	float remove_spawnpoint;
	float restore_spawnpoint;
	float remove_spawngroup;
	float restore_spawngroup;
	int display_item_status1;
	int display_item_status2;
	int display_item_status3;
	int display_item_status4;
	string team_str_home;
	string team_str_moved;
	string team_str_carried;
	string non_team_str_home;
	string non_team_str_moved;
	string non_team_str_carried;
	vector goal_min;
	vector goal_max;
	float ex_skill_min;
	float ex_skill_max;
	float increase_team1;
	float increase_team2;
	float increase_team3;
	float increase_team4;
	string broadcast;
	string team_broadcast;
	string non_team_broadcast;
	string owners_team_broadcast;
	string netname_broadcast;
	string netname_team_broadcast;
	string netname_non_team_broadcast;
	string netname_owners_team_broadcast;
	string team_drop;
	string non_team_drop;
	string netname_team_drop;
	string netname_non_team_drop;
	int all_active;
	int item_list;
	float delay_time;
	int dont_do_triggerwork;
	float g_a;
	float g_e;
	string t_s_h;
	string t_s_m;
	string t_s_c;
	string n_s_h;
	string n_s_m;
	string n_s_c;
	string b_b;
	string b_t;
	string b_n;
	string b_o;
	string n_b;
	string n_t;
	string n_n;
	string n_o;
	string d_t;
	string d_n;
	string d_n_t;
	string d_n_n;
	float numflames;
	string flame_id;
	float undercover_team;
	float undercover_skin;
	string undercover_name;
	float hook_out;
	float camdist;
	vector camangle;
	entity camera_list;
	entity hook;
	float on_hook;
	float fire_held_down;
	vector head_shot_vector;
	float leg_damage;
	float cheat_level;
	float speed_level;
	float FlashTime;
	float StatusRefreshTime;
	float StatusBarSize;
	float StatusBarRes;
	float StatusBarScreen;
	int runes_owned;
	float clversion;
	float cltype;
	entity npc_nextTeamList;
	entity npc_nextEntInTeamList;
	float wallhug;
	int keys;
	float oldkeys;
	float ishuman;
	float b_frags;
	float b_clientno;
	float b_shirt;
	float b_pants;
	float ai_time;
	float b_sound;
	float missile_speed;
	float portal_time;
	int b_skill;
	int b_aiflags;
	float b_num;
	float b_chattime;
	float b_userid;
	float b_menu;
	float b_timeToRedrawWaypointEditorMenu;
	float b_menu_value;
	float b_routeInvalid;
	float b_pursuingEnemy;
	float dyn_time;
	float dyn_plat;
	float b_roamingWaypoints;
	entity temp_way;
	entity target1;
	entity target2;
	entity target3;
	entity target4;
	entity b_lastGoalTarget;
	entity _prev;
	entity _next;
	entity last_way;
	entity current_way;
	entity b_entityToAvoid;
	vector b_commandedViewAngle;
	vector b_dest;
	vector mouse_emu;
	vector b_obstructionDirection;
	vector movevect;
	vector b_dir;
	vector dyn_dest;
	vector b_botRole;
	float b_botInEnemyFOV;
	float b_botInEnemyPlayerFOV;
	float b_botInEnemyMachineFOV;
	float ed_jumpLastPressed;
	float ed_fireLastPressed;
	void (*npc_oldthink)();
	float monsterweight;
	int monsterflags;
//	float healamount;
//	float healtype;
	entity pickedupobject_hands;
	entity pickupthink_hands;
	entity _oldowner;
	entity pickedupby;
	float oldmovetype;
//	float dmgtime;
	float (*OnNoticeEnemy)();
	float (*OnPreAttack)();
//	entity npc_nextTeamList;
//	entity npc_nextEntInTeamList;
	float inpain;
} entvars_t; // END typedef struct ProgsFields
