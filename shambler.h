#ifndef SHAMBLER_H
#define SHAMBLER_H

namespace Progs {

float CanDamage(entity targ, entity inflictor);
void sham_xmas_removefx();
void sham_stand1();
void sham_stand2();
void sham_stand3();
void sham_stand4();
void sham_stand5();
void sham_stand6();
void sham_stand7();
void sham_stand8();
void sham_stand9();
void sham_stand10();
void sham_stand11();
void sham_stand12();
void sham_stand13();
void sham_stand14();
void sham_stand15();
void sham_stand16();
void sham_stand17();
void sham_walk1();
void sham_walk2();
void sham_walk3();
void sham_walk4();
void sham_walk5();
void sham_walk6();
void sham_walk7();
void sham_walk8();
void sham_walk9();
void sham_walk10();
void sham_walk11();
void sham_walk12();
void sham_run1();
void sham_run2();
void sham_run3();
void sham_run4();
void sham_run5();
void sham_run6();
void sham_smash1();
void sham_smash2();
void sham_smash3();
void sham_smash4();
void sham_smash5();
void sham_smash6();
void sham_smash7();
void sham_smash8();
void sham_smash9();
void sham_smash10();
void sham_smash11();
void sham_smash12();
void sham_swingr1();
void ShamClaw(float side);
void sham_swingl1();
void sham_swingl2();
void sham_swingl3();
void sham_swingl4();
void sham_swingl5();
void sham_swingl6();
void sham_swingl7();
void sham_swingl8();
void sham_swingl9();
void sham_swingr1();
void sham_swingr2();
void sham_swingr3();
void sham_swingr4();
void sham_swingr5();
void sham_swingr6();
void sham_swingr7();
void sham_swingr8();
void sham_swingr9();
void sham_melee();
void CastLightning();
void sham_magic1();
void sham_magic2();
void sham_magic3();
void sham_magic4();
void sham_magic5();
void sham_magic6();
void sham_magic9();
void sham_magic10();
void sham_magic11();
void sham_magic12();
void sham_pain1();
void sham_pain2();
void sham_pain3();
void sham_pain4();
void sham_pain5();
void sham_pain6();
void sham_pain(entity attacker, float damage);
void sham_death1();
void sham_death2();
void sham_death3();
void sham_death4();
void sham_death5();
void sham_death6();
void sham_death7();
void sham_death8();
void sham_death9();
void sham_death10();
void sham_death11();
void custom_shambler_die();
float CheckShamMelee();
float CheckShamLightning();
float ShamCheckAttack();
void sham_xmas1();
void sham_xmas2();
void sham_xmas3();
void sham_xmas4();
void sham_xmas5();
void sham_xmas6();
void sham_xmas7();
void sham_xmas8();
void sham_xmas9();
void sham_xmas10();
void sham_xmas11();
void sham_xmas12();
void sham_xmas13();
void sham_xmas14();
void sham_xmas15();
void sham_xmas16();
void sham_xmas17();
void sham_xmas18();
void sham_xmas19();
void sham_xmas20();
void sham_xmas21();
void sham_xmas22();
void sham_xmas23();
void sham_xmas24();
void sham_xmas25();
void sham_xmas26();
void sham_xmas27();
void sham_xmas28();
void sham_xmas29();
void sham_xmas30();
void sham_xmas31();
void sham_xmas32();
void sham_xmas33();
void sham_xmas_removefx();

} // END namespace Progs

#endif // END SHAMBLER_H

