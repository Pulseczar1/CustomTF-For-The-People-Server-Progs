#ifndef TFORT_H
#define TFORT_H

namespace Progs {

void GrenadeExplode();
void spike_touch();
void bound_other_ammo(entity p);
void DisplayItemStatus(entity Goal, entity Player, entity Item);
void TF_T_Damage(entity targ, entity inflictor, entity attacker, float damage, int T_flags, float T_AttackType);
//void tfgoalitem_RemoveFromPlayer(entity Item, entity AP, float method);
void TeamFortress_MOTD();
float TeamFortress_TeamGetColor(float tno);
void TeamFortress_TeamSetColor(float tno);
float TeamFortress_TeamPutPlayerInTeam(float performChecks);
float TeamFortress_TeamGetScore(float tno);
int TeamFortress_TeamGetIllegalClasses(float tno);
void DropToCustomClassGen();
float W_BestWeapon();
void FragGrenadeTouch();
void FragGrenadeExplode();
void KracGrenadeTouch();
void KracGrenadeExplode();
void AntiGravGrenadeExplode();
void Autoitem_think();
void DetonateAllGuns();
void TeamFortress_ChangeClass();
void TeamFortress_DisplayLegalClasses();
void TeamFortress_Inventory();
void Grunty_PrintDetails( entity dest, entity g, float printLevel);
void TeamFortress_ShowTF();
void TeamFortress_PrimeGrenade();
void TeamFortress_ThrowGrenade();
void TeamFortress_DisplayDetectionItems();
float IsLegalClass(float pc);
void TeamFortress_SetHealth();
void TeamFortress_SetEquipment();
void TeamFortress_SetSpeed(entity p);
void TeamFortress_SetSkin(entity p);
void TeamFortress_PrintClassName(entity Viewer, float pc, float rpc);
void TeamFortress_RemoveTimers();
void TeamFortress_SetupRespawn(float Suicided);
void TeamFortress_CheckClassStats();
float TeamFortress_GetMaxAmmo(entity Retriever, float AmmoType);
float TeamFortress_CanGetWeapon(entity Retriever, int WeaponType);
float TeamFortress_AddBackpackItems(entity Retriever, entity Items);
float TeamFortress_DescribeArmor(entity Player, int Armorclass);
void TeamFortress_SayClassName(entity player);
void TeamFortress_AmmoboxTouch();
float num_team_ammoboxes(float tno);
void RemoveOldAmmobox(float tno);
void increment_team_ammoboxes(float tno);
void decrement_team_ammoboxes(float tno);
void TeamFortress_ExplodePerson();
void NormalGrenadeTouch();
void NormalGrenadeExplode();
void PlayerObserverMode();
void TeamFortress_Alias(const string& halias, float himpulse1, float himpulse2);
void TeamFortress_Regenerate();
void TeamFortress_RegenerateCyber();
void TeamFortress_RegenerateCells();
float Return_Custom_Skins(entity p);
void FlareGrenadeTouch();
void FlareGrenadeExplode();
void FlareBounce();
void grunty_boundammo(entity sld);
void UpdateCells(entity player);
void BioGrenadeTouch();
void BioGrenadeExplode();
float GetMaxGrens(entity theplayer, float grenslot);
string GetRuneString(float runetype);
float StripDisallowed(entity player);
float GiveFreeStuff(entity player);
float RestoreOriginalItems(entity player);
void ResetStripedAndGiven(entity player);
void UseSpecialSkill();
void TeamFortress_ChangeClass();
void TeamFortress_DisplayLegalClasses();
void PrintOwnedMonsterInfo( entity printDest, entity thething);
void TeamFortress_Inventory();
void TeamFortress_ShowTF();
void TeamFortress_GrenadePrimed();
void TeamFortress_PrimeGrenade();
void TeamFortress_GrenadePrimed();
void TeamFortress_ThrowGrenade();
float IsLegalClass(float pc);
void TeamFortress_SetSpeed(entity p);
void TeamFortress_SetHealth();
float Return_Custom_Skins(entity p);
void TeamFortress_SetSkin(entity p);
void TeamFortress_SetEquipment();
float TeamFortress_GetMaxAmmo(entity Retriever, float AmmoType);
float TeamFortress_CanGetWeapon(entity Retriever, int WeaponType);
float TeamFortress_DescribeArmor(entity Player, int Armorclass);
float TeamFortress_AddBackpackItems(entity Retriever, entity Items);
string TeamFortress_GetClassName(float pc);
string TeamFortress_GetJobName(int pc);
void TeamFortress_PrintClassName(entity Viewer, float pc, float rpc);
void TeamFortress_PrintJobName(entity Viewer, float pc);
void TeamFortress_SayClassName(entity player);
void TeamFortress_RemoveTimers();
void TeamFortress_SetupRespawn(float Suicided);
void TeamFortress_CheckClassStats();
void TeamFortress_DropAmmo(float type);
void TeamFortress_AmmoboxTouch();
float num_team_ammoboxes(float tno);
void RemoveOldAmmobox(float tno);
void increment_team_ammoboxes(float tno);
void decrement_team_ammoboxes(float tno);
void TeamFortress_AssaultWeapon();
void TeamFortress_ExplodePerson();
void NormalGrenadeTouch();
void NormalGrenadeExplode();
void TeamFortress_DisplayDetectionItems();
void BioInfection_Decay();
void BioInfection_MonsterDecay();
void TeamFortress_Alias(const string& halias, float himpulse1, float himpulse2);
void TeamFortress_Regenerate();
void CyberAugSleep();
void TeamFortress_RegenerateCyber();
void TeamFortress_RegenerateCells();
void PlayerObserverMode();
float crossproduct(const vector& veca, const vector& vecb);

} // END namespace Progs

#endif // END TFORT_H

